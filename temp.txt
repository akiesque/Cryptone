st.markdown("### Market Insight Overview")

# Layout: Two columns side-by-side
col1, col2 = st.columns(2)

# ----- Left Column: Sentiment Category Table -----
with col1:
    st.markdown("### 📊 Social Volume (Top 5)")

    # Mock Data
    raw_data = [
        {"Crypto": "Bitcoin",  "Mentions": 8532, "Spike": 12},
        {"Crypto": "Ethereum", "Mentions": 6421, "Spike": 8},
        {"Crypto": "XRP",      "Mentions": 4398, "Spike": 20},
    ]

    # Add Emoji Heat Level
    def spike_emoji(spike):
        if spike > 15:
            return "🔥🔥🔥"
        elif spike > 10:
            return "🔥🔥"
        elif spike > 5:
            return "🔥"
        else:
            return "🌡️"

    for row in raw_data:
        row["Heat"] = spike_emoji(row["Spike"])
        row["Spike %"] = f"⬆️ {row['Spike']}%"

    df = pd.DataFrame(raw_data)

    # Style the Mentions as horizontal bar color
    def style_mentions(val):
        color = '#ffcccb' if val < 4000 else '#ff9999' if val < 7000 else '#ff6666'
        return f'background-color: {color}; padding: 4px; border-radius: 4px'

    styled_df = df[["Crypto", "Mentions", "Spike %", "Heat"]].style.applymap(style_mentions, subset=["Mentions"])

    st.dataframe(styled_df, use_container_width=True)
# ----- Right Column: Top 5 Keywords Table -----
with col2:
    st.markdown("### 🧠 Top Social Media Keywords")

    # Mock data – you can replace this with actual NLP keyword extraction later
    keyword_data = {
        "Rank": [1, 2, 3, 4, 5],
        "Keyword": ["etf", "bull run", "whale", "pump", "resistance"],
        "Mentions": [321, 287, 205, 183, 150]
    }

    df_keywords = pd.DataFrame(keyword_data)
    df_keywords.index = df_keywords.index + 1
    st.dataframe(df_keywords, use_container_width=True)